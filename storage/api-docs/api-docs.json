{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1/",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Login para gerar o token",
                "operationId": "4a03b1b55f42533b0d146398e7f34de2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Donec sollicitudin molestie malesuada.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/index": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get list of user",
                "description": "Returns list of user",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/show/{id}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/store": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Store new project",
                "description": "Returns project data",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/update/{id}": {
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update existing user",
                "description": "Returns updated project data",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/destroy/{id}": {
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no content",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "title": "Login Request",
                "description": "Login request body data",
                "required": [
                    "password"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "email of user",
                        "type": "string",
                        "example": "teste@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "password of user",
                        "type": "string",
                        "example": "@Mudar123"
                    }
                },
                "type": "object"
            },
            "StoreProjectRequest": {
                "title": "Store Project request",
                "description": "Store Project request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new User",
                        "type": "string",
                        "example": "User"
                    },
                    "sex": {
                        "title": "sex",
                        "description": "Sex of the new User",
                        "type": "string",
                        "example": "Male pr Female"
                    },
                    "age": {
                        "title": "age",
                        "description": "Age of new User",
                        "type": "integer",
                        "format": "int64",
                        "example": 26
                    }
                },
                "type": "object"
            },
            "UpdateProjectRequest": {
                "title": "Update Project request",
                "description": "Update Project request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new user",
                        "type": "string",
                        "example": "Name"
                    },
                    "sex": {
                        "title": "sex",
                        "description": "Sex of the new user",
                        "type": "string",
                        "example": "Male or Female"
                    },
                    "age": {
                        "title": "age",
                        "description": "Age of the new user",
                        "type": "integer",
                        "example": "20"
                    }
                },
                "type": "object"
            },
            "Project": {
                "title": "Project",
                "description": "Project model",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the user",
                        "type": "string",
                        "example": "User"
                    },
                    "sex": {
                        "title": "sex",
                        "description": "Sex of the user",
                        "type": "string",
                        "example": "Male or Female "
                    },
                    "age": {
                        "title": "age",
                        "description": "Age of the user",
                        "type": "string",
                        "example": "20"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Project"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "email of the user",
                        "type": "string",
                        "example": "teste@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "@Mudar123.com"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "ProjectResource": {
                "title": "ProjectResource",
                "description": "Project resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProjectResource"
                }
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Projects",
            "description": "API Endpoints of Projects"
        }
    ]
}